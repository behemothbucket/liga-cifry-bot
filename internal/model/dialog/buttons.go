package dialog

import (
	"strings"
	"telegram-bot/internal/model/search"
)

var (
	BtnCriterions = map[string][][]string{
		"personal_cards": {
			{"–§–ò–û", "fio"},
			{"–ì–æ—Ä–æ–¥", "city"},
			{"–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è", "organization"},
			{"–î–æ–ª–∂–Ω–æ—Å—Ç—å", "job_title"},
			{"–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏", "expert_competencies"},
			{"–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞", "possible_cooperation"},
			{"–ö–æ–Ω—Ç–∞–∫—Ç—ã", "contacts"},
		},
		"organization_cards": {
			{"–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è", "name"},
			{"–°—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ", "structural_subdivision"},
			{"¬´–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç-2030¬ª", "priority_2030"},
			{"–ì–æ—Ä–æ–¥", "city"},
			{"–ß–ª–µ–Ω—Å—Ç–≤–æ –≤ –∫–æ–Ω—Å–æ—Ä—Ü–∏—É–º–µ", "consortium_membership"},
			{"–†–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ü–û", "software"},
			{"–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏ –∏ –ù–û–¶", "laboratory_and_noc"},
		},
	}
	BtnSearchPerson       = "üîç –ü–æ–∏—Å–∫ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫"
	BtnSearchOrganization = "üîç –ü–æ–∏—Å–∫ –∫–∞—Ä—Ç–æ—á–µ–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π"
	BtnBack               = "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
	BtnMenu               = "‚Ü©Ô∏è –ú–µ–Ω—é"
	BtnCancelSearch       = "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫"
	BtnApply              = "‚úÖ –ü—Ä–∏–º–µ–Ω–∏—Ç—å"
	// btnLoadMore           = "‚è¨ –ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ 5"
	BtnChosenPrefix = "‚òëÔ∏è "
)

func HandleCriterionButton(button string, se search.Engine) string {
	searchScreen := se.GetSearchScreen()
	buttons := BtnCriterions[searchScreen]

	for i, expected := range buttons {
		if button == expected[0] {
			if strings.HasPrefix(buttons[i][0], BtnChosenPrefix) {
				uncheckedButton := strings.TrimPrefix(
					expected[0],
					BtnChosenPrefix,
				)
				buttons[i][0] = uncheckedButton
				se.RemoveCriterion(BtnChosenPrefix + expected[0])
			} else {
				buttons[i][0] = BtnChosenPrefix + expected[0]
				se.AddCriterion(buttons[i][0], buttons[i][1])
			}
			break
		}
	}

	return button
}

func ResetCriteriaButtons() {
	for _, searchScreen := range BtnCriterions {
		for i, btn := range searchScreen {
			searchScreen[i][0] = strings.TrimPrefix(btn[0], BtnChosenPrefix)
		}
	}
}
