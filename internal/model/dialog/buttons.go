package dialog

import (
	"strings"
	"telegram-bot/internal/model/search"
)

// –ö–Ω–æ–ø–∫–∏.
var (
	BtnCriterions = map[string]map[string][]string{
		"person_cards": {
			"–§–ò–û":         {"fio"},
			"–ì–æ—Ä–æ–¥":       {"city"},
			"–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è": {"organization"},
			"–î–æ–ª–∂–Ω–æ—Å—Ç—å":   {"job_title"},
			"–ö–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏": {"competencies"},
			"–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞": {"possible_cooperation"},
		},
		"organization_cards": {
			"–°—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ":     {"structural_subdivision"},
			"¬´–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç-2030¬ª":              {"priority_2030"},
			"–ß–ª–µ–Ω—Å—Ç–≤–æ –≤ –∫–æ–Ω—Å–æ—Ä—Ü–∏—É–º–µ":        {"consortium_membership"},
			"–†–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ü–û": {"responsible_software_development"},
			"–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏ –∏ –ù–û–¶":   {"laboratories_centers"},
			"–ö–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏":                   {"competencies"},
		},
	}

	BtnSearchPerson       = "üîç –ü–æ–∏—Å–∫ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫"
	BtnSearchOrganization = "üîç –ü–æ–∏—Å–∫ –∫–∞—Ä—Ç–æ—á–µ–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π"
	BtnBack               = "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
	// btnMenu               = "‚Ü©Ô∏è –ú–µ–Ω—é"
	BtnCancelSearch = "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫"
	BtnApply        = "‚úÖ –ü—Ä–∏–º–µ–Ω–∏—Ç—å"
	// btnSearch             = "üîç –ò—Å–∫–∞—Ç—å"
	// btnLoadMore           = "‚è¨ –ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ 5"
	btnChosenPrefix = "‚òëÔ∏è "
)

func HandleCriterionButton(button string, se search.Engine) string {
	searchScreen := se.GetSearchScreen()
	buttons := BtnCriterions[searchScreen]

	for btn := range buttons {
		expected := BtnCriterions[searchScreen][btn][0]
		if button == expected {
			if strings.HasPrefix(buttons[btn][0], btnChosenPrefix) {
				uncheckedButton := strings.TrimPrefix(
					buttons[btn][0],
					btnChosenPrefix,
				)
				BtnCriterions[searchScreen][btn][0] = uncheckedButton
				se.RemoveCriterion(uncheckedButton)
			} else {
				BtnCriterions[searchScreen][btn][0] = btnChosenPrefix + button
				se.AddCriterion(buttons[btn][0])
			}
		}
	}

	return button
}

func ResetCriteriaButtons() {
	for searchScreen, buttons := range BtnCriterions {
		for btn := range buttons {
			if strings.HasPrefix(BtnCriterions[searchScreen][btn][0], btnChosenPrefix) {
				BtnCriterions[searchScreen][btn][0] = strings.TrimPrefix(
					BtnCriterions[searchScreen][btn][0],
					btnChosenPrefix,
				)
			}
		}
	}
}
