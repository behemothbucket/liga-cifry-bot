package dialog

import (
	"strings"
	"telegram-bot/internal/model/search"
)

// –ö–Ω–æ–ø–∫–∏.
var (
	btnsCriterions = map[string][]string{
		"person": {
			"–§–ò–û",
			"–ì–æ—Ä–æ–¥",
			"–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è",
			"–î–æ–ª–∂–Ω–æ—Å—Ç—å",
			"–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏",
			"–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞",
		},
		"organization": {
			"–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è",
			"–°—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ",
			"¬´–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç-2030¬ª",
			"–ì–æ—Ä–æ–¥",
			"–ß–ª–µ–Ω—Å—Ç–≤–æ –≤ –∫–æ–Ω—Å–æ—Ä—Ü–∏—É–º–µ",
			"–†–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ü–û",
			"–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏ –∏ –ù–û–¶",
			"–ö–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏",
		},
	}

	btnSearchPerson       = "üîç –ü–æ–∏—Å–∫ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫"
	btnSearchOrganization = "üîç –ü–æ–∏—Å–∫ –∫–∞—Ä—Ç–æ—á–µ–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π"
	btnBack               = "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
	// btnMenu               = "‚Ü©Ô∏è –ú–µ–Ω—é"
	btnCancelSearch = "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫"
	btnApply        = "‚úÖ –ü—Ä–∏–º–µ–Ω–∏—Ç—å"
	// btnSearch             = "üîç –ò—Å–∫–∞—Ç—å"
	// btnLoadMore           = "‚è¨ –ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ 5"
	btnChosenPrefix = "‚òëÔ∏è "
)

func IsCriterionButton(button string, mode string) string {
	for _, v := range btnsCriterions[mode] {
		if button == v {
			return button
		}
	}

	return ""
}

func findButtonIndex(buttons []string, targetButton string) int {
	for i, button := range buttons {
		if button == targetButton {
			return i
		}
	}
	return -1
}

func toggleCriterionButton(button string, se search.SearchEngine) {
	mode := se.GetMode()
	buttons := btnsCriterions[mode]
	index := findButtonIndex(buttons, button)

	if hasPrefix(buttons[index], btnChosenPrefix) {
		uncheckedButton := strings.TrimPrefix(
			buttons[index],
			btnChosenPrefix,
		)
		buttons[index] = uncheckedButton
		se.RemoveCriterion(uncheckedButton)
	} else {
		buttons[index] = btnChosenPrefix + button
		se.AddCriterion(button)
	}
}

func hasPrefix(button string, prefix string) bool {
	return strings.Contains(button, prefix)
}
